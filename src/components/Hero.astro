<section
  class="relative flex items-center justify-start h-screen bg-cover bg-center"
  style="background-image: url('/images/hero.webp');"
>
  <div class="absolute inset-0 bg-black opacity-30"></div>
  <!-- Затемнение фона -->
  <div class="relative text-left z-10 p-4 lg:p-8">
    <h1
      class="text-[60px] lg:text-[150px] font-bold text-white font-nevduplenysh tracking-wider leading-none"
    >
      Блеск и надежность <br /> в каждом грамме
    </h1>
    <p class="mt-4 lg:mt-8">
      <button
        id="openModal"
        class="inline-block px-8 py-4 lg:px-16 lg:py-8 text-lg lg:text-3xl font-semibold bg-gradient-to-r from-yellow-500 via-yellow-600 to-yellow-700 text-white rounded-lg shadow-lg shadow-yellow-500/50 hover:shadow-xl hover:shadow-yellow-400/70 hover:bg-opacity-90 transition-all duration-300"
      >
        Оставить заявку
      </button>
    </p>
  </div>
  <!-- Двигающаяся стрелочка с подсказкой -->
  <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white">
    <div class="flex flex-col items-center">
      <div class="text-xs mb-2">Листай ниже</div>
      <svg
        class="w-8 h-8 animate-bounce"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 9l-7 7-7-7"></path>
      </svg>
    </div>
  </div>
</section>

<!-- Модальное окно -->
<div
  id="modal"
  class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden"
>
  <div
    class="bg-gray-100 rounded-xl p-8 max-w-md w-full mx-4 lg:mx-auto relative"
  >
    <!-- Кнопка закрытия -->
    <button
      id="closeModal"
      class="absolute top-4 right-4 text-gray-600 hover:text-gray-900"
    >
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <h2 class="text-3xl font-semibold mb-4 text-center">Обсудить заказ</h2>
    <p class="text-center text-gray-700 mb-6">
      Оставьте ваши контактные данные. Наши менеджеры отправят вам актуальную
      информацию о ценах и наличии продукции на складе.
    </p>
    <form id="contactForm">
      <input
        type="text"
        id="name"
        placeholder="Ваше имя"
        class="w-full mb-4 p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500"
        required
      />
      <input
        type="tel"
        id="phone"
        placeholder="Телефон"
        class="w-full mb-4 p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500"
        required
      />
      <textarea
        id="comment"
        placeholder="Комментарий"
        class="w-full mb-4 p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500"
        rows="4"
        required></textarea>
      <button
        type="submit"
        class="w-full py-3 bg-yellow-500 text-white rounded-lg font-semibold hover:bg-yellow-600 transition"
      >
        Отправить
      </button>
    </form>
  </div>
</div>

<!-- Скрипт для управления модальным окном и отправки данных в Telegram -->
<script>
  const openModalBtn = document.getElementById("openModal");
  const closeModalBtn = document.getElementById("closeModal");
  const modal = document.getElementById("modal");
  const contactForm = document.getElementById("contactForm");

  // Открыть модальное окно
  openModalBtn.addEventListener("click", () => {
    modal.classList.remove("hidden");
  });

  // Закрыть модальное окно при клике на крестик
  closeModalBtn.addEventListener("click", () => {
    modal.classList.add("hidden");
  });

  // Закрыть модальное окно при клике на фон
  modal.addEventListener("click", (e) => {
    if (e.target === modal) {
      modal.classList.add("hidden");
    }
  });

  // Отправка данных в Telegram
  contactForm.addEventListener("submit", function (e) {
    e.preventDefault();

    const name = document.getElementById("name").value;
    const phone = document.getElementById("phone").value;
    const comment = document.getElementById("comment").value;

    const message = `Новая заявка:\n\nИмя: ${name}\nТелефон: ${phone}\nКомментарий: ${comment}`;

    const token = "YOUR_BOT_TOKEN"; // Замените на токен вашего бота
    const chatId = "YOUR_CHAT_ID"; // Замените на ID вашей группы или чата
    const url = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(
      message,
    )}`;

    fetch(url)
      .then((response) => {
        if (response.ok) {
          alert("Заявка успешно отправлена!");
          contactForm.reset();
          modal.classList.add("hidden");
        } else {
          alert("Ошибка при отправке заявки. Попробуйте позже.");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
        alert("Ошибка при отправке заявки. Попробуйте позже.");
      });
  });
</script>
